datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

generator nexusPrisma {
  provider = "nexus-prisma"
}

// Top level model
model User {
  id            String     @id @default(uuid())
  email         String?    @unique
  emailVerified DateTime?
  phone         String?
  firstName     String?
  lastName      String?
  roles         UserRole[]
  sessions      Session[]
  createdAt     DateTime?  @default(now())
  updatedAt     DateTime?  @updatedAt
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  id         String   @id @default(uuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}

model Photo {
  id        String   @id @default(uuid())
  public_id String   @unique
  createdAt DateTime @default(now())
  unit      Unit?    @relation(fields: [unitId], references: [id], onDelete: Cascade)
  unitId    String?
}

model Unit {
  id            String      @id @default(uuid())
  address       String
  city          String
  name          String?
  bedrooms      Int         @default(1)
  fullBaths     Int         @default(1)
  halfBaths     Int         @default(0)
  laundry       LaundryType @default(NONE)
  utilities     Utility[]
  description   String      @default("")
  visible       Boolean     @default(true)
  availableDate DateTime    @default(now())
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  longitude     Float       @default(0)
  latitude      Float       @default(0)
  photos        Photo[]
}

enum Utility {
  ELECTRIC
  NATURAL_GAS
  SEWER_WATER
}

enum LaundryType {
  NONE
  HOOKUP
  WASHER_DRYER
}

enum UserRole {
  ADMIN
  MANAGER
  USER
}
