datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

generator nexusPrisma {
  provider = "nexus-prisma"
}

// Top level model
model User {
  id            String     @id @default(uuid())
  email         String?    @unique
  emailVerified DateTime?
  phone         String?
  firstName     String?
  lastName      String?
  roles         UserRole[]
  sessions      Session[]
  createdAt     DateTime?  @default(now())
  updatedAt     DateTime?  @updatedAt
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  id         String   @id @default(uuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}

model Photo {
  id         String    @id @default(uuid())
  public_id  String    @unique
  createdAt  DateTime  @default(now())
  property   Property? @relation(fields: [propertyId], references: [id], onDelete: Cascade)
  propertyId String?
  unit       Unit?     @relation(fields: [unitId], references: [id], onDelete: Cascade)
  unitId     String?
}

model Property {
  id            String       @id @default(uuid())
  streetAddress String       @unique
  city          String
  type          PropertyType @default(APARTMENTS)
  longitude     Float        @default(0)
  latitude      Float        @default(0)
  numUnits      Int          @default(0)
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  units         Unit[]
  photos        Photo[]
}

model Unit {
  id               String      @id @default(uuid())
  unitName         String
  numBedrooms      Int         @default(1)
  numFullBathrooms Int         @default(1)
  numHalfBathrooms Int         @default(0)
  laundry          LaundryType @default(NONE)
  utilities        Utility[]
  description      String      @default("")
  available        Boolean     @default(true)
  availableDate    DateTime    @default(now())
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt
  property         Property    @relation(fields: [propertyId], references: [id], onDelete: Cascade)
  propertyId       String
  photos           Photo[]
}

enum Utility {
  ELECTRIC
  NATURAL_GAS
  SEWER_WATER
}

enum LaundryType {
  NONE
  HOOKUP
  WASHER_DRYER
}

enum PropertyType {
  HOUSE
  APARTMENTS
}

enum UserRole {
  ADMIN
  MANAGER
  USER
}
